# =============================================================================================== #
#                                       SRC: Makefile                                             #
# =============================================================================================== #

# =============================================================================================== #
# VARIABLES SECTION                                                                               #
# =============================================================================================== #

# Here - Specify which python interpreter to employ.
SCRIPT_INTERPETER = python3 

# Here - Specify which is the root directory where all results
# from different analyses will be stored, for later investingations 
# about  results, logs and image files.
BASE_DIR_RESULTS = bioinfo_project 

# Here - There are some variable exploited in order
# to run some local tests.
#
# See tasks related to test for more details.
SCRIPT_2_TEST = test_feature.py
TESTS_DIR = tests

# Here - There are two variable used to run the
# classifier tool for genes fusions recognizing:
# - SCRIPT_ANALYSIS, standas for the `main.py` file which is used to
#   write the program;
# - PROGRAM_ANALYSIS, is a symbolic link that can be used to run
#   the program written above without taking care about how it was implemented
#   as weel as without knowing which kind of programming language has been adopted.
#
# See task named `run_analysis` for details how both them have been employed.
SCRIPT_ANALYSIS = main.py
PROGRAM_ANALYSIS = genes_fusions_classifier

# =============================================================================================== #
# VARIABLES DEFINED TO RUN TESTS WITHIN PROPER TASKS                                              #
# =============================================================================================== #

# ---------------------------- #
# A Test                       #
# ---------------------------- #
NETWORK_NAME = ModelEmbeddingBidirect
ARGS_ANALYSIS = --validation --load_network $(NETWORK_NAME)

# ---------------------------- #
# Test Setup Project's subidrs #
# ---------------------------- #
SCRIPT_TEST_ENVIRONMENT_SETUP = script_environment_setup_test.py
ARGS_TEST_ENVIRONMENT_SETUP = --validation --train --network_parameters models/ModelEmbeddingBidirect.json --load_network ModelEmbeddingBidirect

# ---------------------------- #
# Test Load Project's data     #
# ---------------------------- #
SCRIPT_TEST_FETCH_AND_PRE_PROCESS = script_fetch_and_preprocess_test.py
ARGS_TEST_FETCH_AND_PREPROCESS = --validation --train --network_parameters models/ModelEmbeddingBidirect.json --load_network ModelEmbeddingBidirect

# ---------------------------- #
# Test Pipeline for Analyses   #
# ---------------------------- #
SCRIPT_TEST_PIPELINE = script_pipeline_test.py
ARGS_TEST_PIPELINE = --validation --network_parameters models/ModelEmbeddingBidirect.json --load_network ModelEmbeddingBidirect --sequence_type protein

# ---------------------------- #
# Test Spredsheet for Analyses #
# ---------------------------- #
SCRIPT_TEST_SPREDSHEET = script_create_spredsheet.py
ARGS_TEST_SPREDSHEET = --validation --network_parameters models/ModelEmbeddingBidirect.json --load_network ModelEmbeddingBidirect --sequence_type protein

# =============================================================================================== #
# TASKS SECTION                                                                                   #
# =============================================================================================== #

# ---------------------------- ---------------------#
# TESTS - SECTION                                   #
# ------------------------------------------------- #
test_setup_environment_for_analysis: setup_before_run_task
	cp $(TESTS_DIR)/$(SCRIPT_TEST_ENVIRONMENT_SETUP) $(SCRIPT_2_TEST)
	$(SCRIPT_INTERPETER) $(SCRIPT_2_TEST) $(ARGS_TEST_ENVIRONMENT_SETUP)
	rm -f $(SCRIPT_2_TEST)

test_fetch_data_and_preprocess_for_analysis: setup_before_run_task
	cp $(TESTS_DIR)/$(SCRIPT_TEST_FETCH_AND_PRE_PROCESS) $(SCRIPT_2_TEST)
	$(SCRIPT_INTERPETER) $(SCRIPT_2_TEST) $(ARGS_TEST_FETCH_AND_PREPROCESS)
	rm -f $(SCRIPT_2_TEST)

test_pipeline_for_analysis: setup_before_run_task
	cp $(TESTS_DIR)/$(SCRIPT_TEST_PIPELINE) $(SCRIPT_2_TEST)
	$(SCRIPT_INTERPETER) $(SCRIPT_2_TEST) $(ARGS_TEST_PIPELINE)
	rm -f $(SCRIPT_2_TEST)

test_spredsheet_creation_for_analysis: setup_before_run_task
	cp $(TESTS_DIR)/$(SCRIPT_TEST_SPREDSHEET) $(SCRIPT_2_TEST)
	$(SCRIPT_INTERPETER) $(SCRIPT_2_TEST) $(ARGS_TEST_SPREDSHEET)
	rm -f $(SCRIPT_2_TEST)

# ---------------------------- ---------------------#
# MANAGEMENT - SECTION                              #
# ------------------------------------------------- #
setup_before_run_task:
	clear

# Clear directory with subdirectories corresponind to
# different runs with their results.
clear_result_dirs: setup_before_run_task
	rm -fr $(BASE_DIR_RESULTS)

# different runs with their results.
clear_result_dirs_from_tests: setup_before_run_task
	bash ./scripts/script_clear_results_dir_from_tests.sh ./bioinfo_project --not-cancel



